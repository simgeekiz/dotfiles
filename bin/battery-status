#!/bin/zsh
# ---
# Author: Simge Ekiz
# ---
# A quick little indicator for battery status on your Mac laptop, suitable for
# display in your prompt.
#
# Usage: battery-status
#

RED="\033[31m"
GREEN="\033[32m"
ORANGE="\033[38;5;214m"
YELLOW="\033[33m"
RESET="\033[0m"

case "$(uname -s)" in
  Darwin*)
    # Check if pmset command is available
    if ! command -v pmset &> /dev/null; then
      echo "❗ pmset command not found. Please ensure you are running this on a macOS system."
      exit 1
    fi

    # Get the battery status using pmset
    battery_status=$(pmset -g batt)
    # AC status (power source)
    ac_status=$([[ "$battery_status" == *"AC Power"* ]] && echo "🔌 On AC" || echo "🔋 On Battery")
    # Charging state (charging, discharging, charged)
    charging_status=$(echo "$battery_status"  | grep -oE 'charging|discharging|charged')
    # Extract battery percentage
    battery_capacity=$(echo "$battery_status"  | grep -Eo '[0-9]{1,3}%')
    percent_num=${battery_capacity%\%}  # Strip %
    if (( percent_num <= 20 )); then
      color=$RED 
    elif (( percent_num <= 50 )); then
      color=$ORANGE
    elif (( percent_num <= 70 )); then
      color=$YELLOW
    else
      color=$GREEN
    fi
    # Extract time remaining if present
    time_remaining=$(echo "$battery_status" |
      tail -1 |
      cut -f2 |
      awk -F"; " '{print $3}' |
      cut -d' ' -f1
    )

    # Normalize cases with no estimate
    if [[ "$time_remaining" == *"(no"* || "$time_remaining" == *"not"* ]]; then
      time_remaining='⌛️'
    elif [[ "$time_remaining" == "0:00" ]]; then
      time_remaining='⚡️'
    else
      time_remaining="⌛️ $time_remaining"
    fi

    # Final output
    echo "$ac_status - $charging_status (${color} $battery_capacity ${RESET}) - $time_remaining"

    ;;
  Linux*)
    # Check if the battery and AC paths exist 
    BAT_PATH="/sys/class/power_supply/BAT0"
    AC_PATH="/sys/class/power_supply/AC"
    if [[ ! -d $BAT_PATH || ! -d $AC_PATH ]]; then
      echo "❗ This machine does not have a battery or AC power supply information available."
      exit 1
    fi

    # Extract charging state (Charging, Discharging, Full)
    charging_status=$(cat "$BAT_PATH/status" 2>/dev/null)
    # Extract battery percentage
    battery_capacity=$(cat "$BAT_PATH/capacity" 2>/dev/null)
    if (( battery_capacity <= 20 )); then
      color=$RED 
    elif (( battery_capacity <= 50 )); then
      color=$ORANGE
    elif (( battery_capacity <= 70 )); then
      color=$YELLOW
    else
      color=$GREEN
    fi
    # Read AC power online status (1 if plugged in, 0 if not)
    ac_online=$(cat "$AC_PATH/online" 2>/dev/null)
    # Fancy output for AC status (power source)
    ac_status=$([[ "$ac_online" -eq 1 ]] && echo "🔌 On AC" || echo "🔋 On Battery")

    # Final output
    echo "$ac_status - $charging_status (${color} $battery_capacity ${RESET})"
    ;;
  *)
    echo "❗ We do not have battery information for this $(uname) system. Unsupported OS"
    exit 1
    ;;
esac

